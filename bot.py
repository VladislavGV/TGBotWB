import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TELEGRAM_TOKEN = "8286347628:AAGn1jX3jB-gnVESPRZlmEeoWg9IFhRnw6M"
ADMIN_CHAT_ID = 1082958705
YOOKASSA_TOKEN = "test_a-AT5Q8y-jV4fkRKCOYJLXkeKeg-wJzs0L-oN7udAzo"

PORT = 8000

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ---
keyboard = ReplyKeyboardMarkup([
    [KeyboardButton("üíµ –û–ø–ª–∞—Ç–∏—Ç—å 100‚ÇΩ"), KeyboardButton("üíµ –û–ø–ª–∞—Ç–∏—Ç—å 500‚ÇΩ")],
    [KeyboardButton("üìû –í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)],
    [KeyboardButton("üë§ –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")]
], resize_keyboard=True)


# --- –ö–æ–º–∞–Ω–¥—ã ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Å–µ—Ä–≤–∏—Å IT-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π!\n\n"
        "üéØ –ù–∞—à–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É–∑–∫–æ–≥–æ –∫—Ä—É–≥–∞ –ª—é–¥–µ–π.\n"
        "üíº –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—à–∏—Ö IT-–ø—Ä–æ–±–ª–µ–º –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.\n\n"
        "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π:\n"
        "‚Ä¢ 1 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: 100 —Ä—É–±.\n"
        "‚Ä¢ 12 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: 500 —Ä—É–±. (–í—ã —ç–∫–æ–Ω–æ–º–∏—Ç–µ 700 —Ä—É–±! üéâ)\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"
    )
    await update.message.reply_text(welcome_text, reply_markup=keyboard)


# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ---
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user = update.message.from_user

    if text in ["üíµ –û–ø–ª–∞—Ç–∏—Ç—å 100‚ÇΩ", "üíµ –û–ø–ª–∞—Ç–∏—Ç—å 500‚ÇΩ"]:
        amount = 100 if text.endswith("100‚ÇΩ") else 500
        await update.message.reply_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø–ª–∞—Ç—É {amount}‚ÇΩ. –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ –ÆKassa –±—É–¥–µ—Ç –∑–¥–µ—Å—å.")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –ÆKassa API
        await notify_admin(user.id, user.full_name, None, amount)

    elif text == "üë§ –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º":
        await update.message.reply_text(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: @{ADMIN_CHAT_ID}")

    elif text == "üìû –í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞":
        await update.message.reply_text("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")

    elif update.message.contact:
        phone = update.message.contact.phone_number
        await update.message.reply_text(f"–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä {phone} –ø–æ–ª—É—á–µ–Ω.")
        await notify_admin(user.id, user.full_name, phone, None)


# --- –§—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ---
async def notify_admin(user_id, full_name, phone, amount):
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    message = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\nID: {user_id}\n–ò–º—è: {full_name}\n"
    if phone:
        message += f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
    if amount:
        message += f"–°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: {amount}‚ÇΩ"
    await app.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message)


# --- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT | filters.CONTACT, handle_message))

    # –î–ª—è Render –∏—Å–ø–æ–ª—å–∑—É–µ–º webhook (—É–∫–∞–∂–∏ —Å–≤–æ–π URL)
    RENDER_URL = "https://tgbotwb.onrender.com"
    WEBHOOK_PATH = f"/webhook/{TELEGRAM_TOKEN}"

    import asyncio
    import uvicorn
    from fastapi import FastAPI, Request

    fast_app = FastAPI()

    @fast_app.post(WEBHOOK_PATH)
    async def telegram_webhook(req: Request):
        body = await req.json()
        update = Update.de_json(body)
        await app.update_queue.put(update)
        return {"ok": True}

    @fast_app.get("/health")
    async def health():
        return {"status": "ok"}

    uvicorn.run(fast_app, host="0.0.0.0", port=PORT)
