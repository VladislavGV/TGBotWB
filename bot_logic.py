from telegram import ReplyKeyboardMarkup, KeyboardButton, Update
from telegram.ext import ContextTypes
from yookassa import Configuration, Payment

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
ADMIN_CHAT_ID = 1082958705
YO_KASSA_TOKEN = "test_a-AT5Q8y-jV4fkRKCOYJLXkeKeg-wJzs0L-oN7udAzo"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ÆKassa
Configuration.account_id = YO_KASSA_TOKEN.split('_')[1]
Configuration.secret_key = YO_KASSA_TOKEN

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã
def get_buy_keyboard():
    keyboard = [
        [KeyboardButton("100‚ÇΩ"), KeyboardButton("500‚ÇΩ")],
        [KeyboardButton("–°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
def get_platform_keyboard():
    keyboard = [
        [KeyboardButton("iOS"), KeyboardButton("Android")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

async def handle_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Å–µ—Ä–≤–∏—Å IT-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π!\n\n"
        "üéØ –ù–∞—à–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É–∑–∫–æ–≥–æ –∫—Ä—É–≥–∞ –ª—é–¥–µ–π.\n"
        "üíº –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—à–∏—Ö IT-–ø—Ä–æ–±–ª–µ–º –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.\n\n"
        "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π:\n"
        "‚Ä¢ 1 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: 100 —Ä—É–±.\n"
        "‚Ä¢ 12 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: 500 —Ä—É–±. (–í—ã —ç–∫–æ–Ω–æ–º–∏—Ç–µ 700 —Ä—É–±! üéâ)\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"
    )
    await update.message.reply_text(welcome_text, reply_markup=get_buy_keyboard())

async def handle_buy(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text in ["100‚ÇΩ", "500‚ÇΩ"]:
        context.user_data['amount'] = int(text.replace("‚ÇΩ",""))
        # –ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        phone_keyboard = [[KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]]
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", 
                                        reply_markup=ReplyKeyboardMarkup(phone_keyboard, resize_keyboard=True))
    elif text == "–°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π":
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID,
                                       text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{update.message.from_user.username} —Ö–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")
        await update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ‚úÖ")

async def handle_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone = update.message.contact.phone_number if update.message.contact else update.message.text
    context.user_data['phone'] = phone
    context.user_data['user_id'] = update.message.from_user.id
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=get_platform_keyboard())

async def handle_platform(update: Update, context: ContextTypes.DEFAULT_TYPE):
    platform = update.message.text
    context.user_data['platform'] = platform

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É
    message = (
        f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n"
        f"ID: {context.user_data['user_id']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}\n"
        f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {platform}\n"
        f"–°—É–º–º–∞: {context.user_data['amount']}‚ÇΩ"
    )
    await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message)

    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –ÆKassa
    payment = Payment.create({
        "amount": {
            "value": str(context.user_data['amount']),
            "currency": "RUB"
        },
        "confirmation": {
            "type": "redirect",
            "return_url": "https://t.me/YourBotUsername"
        },
        "capture": True,
        "description": f"–û–ø–ª–∞—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ {context.user_data['amount']}‚ÇΩ"
    }, idempotence_key=str(context.user_data['user_id']))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(f"–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {payment.confirmation.confirmation_url}")
